(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{410:function(e,t,r){var content=r(440);content.__esModule&&(content=content.default),"string"==typeof content&&(content=[[e.i,content,""]]),content.locals&&(e.exports=content.locals);(0,r(37).default)("4b0986e5",content,!0,{sourceMap:!1})},439:function(e,t,r){"use strict";r(410)},440:function(e,t,r){var n=r(36)(!1);n.push([e.i,".classification_wrapper .fixed_select[data-v-4d69ab13]{cursor:pointer;width:70%;font-size:22px;font-width:normal;padding:4px;background:#f5f7f9;border:none;border-radius:.2rem;transition:.6s}.classification_wrapper .fixed_select[data-v-4d69ab13]:focus{outline:none}.classification_wrapper .fixed_select[data-v-4d69ab13]:hover{background-color:#488ec4;color:#fff;transition:all .3s}",""]),e.exports=n},447:function(e,t,r){"use strict";r.r(t);r(39),r(52),r(53),r(48),r(40),r(57),r(41),r(26),r(59),r(42);var n=r(13),o=r(20),c=(r(71),r(30),r(58),r(38),r(14),r(31),r(70));function l(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,t){if(!e)return;if("string"==typeof e)return f(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return f(e,t)}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var i=0,n=function(){};return{s:n,n:function(){return i>=e.length?{done:!0}:{done:!1,value:e[i++]}},e:function(e){throw e},f:n}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,c=!0,l=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return c=e.done,e},e:function(e){l=!0,o=e},f:function(){try{c||null==r.return||r.return()}finally{if(l)throw o}}}}function f(e,t){(null==t||t>e.length)&&(t=e.length);for(var i=0,r=new Array(t);i<t;i++)r[i]=e[i];return r}function m(object,e){var t=Object.keys(object);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(object);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(object,e).enumerable}))),t.push.apply(t,r)}return t}function d(e){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?m(Object(source),!0).forEach((function(t){Object(o.a)(e,t,source[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(source)):m(Object(source)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(source,t))}))}return e}var v={data:function(){return{parameters:{},autoComplete:{},autocompleteStaticData:{},debounce:null}},computed:d(d({},Object(c.b)({filterByName:"filter_by_name",activeDataset:"active_dataset"})),{},{description:function(){return this.filterByName("sample").description},dataSetSpecificParameters:function(){return this.activeDataset.sample},filters:function(){var e,t;return null!==(e=null===(t=this.dataSetSpecificParameters)||void 0===t?void 0:t.filter)&&void 0!==e?e:[]}}),watch:{activeDataset:function(){this.parameters={},this.setAutoComplete(),this.initiateParametersDataset()}},created:function(){var e=this;return Object(n.a)(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:e.getAutoCompleteData().then((function(){e.initiateParametersDataset(),e.setAutoComplete()}));case 1:case"end":return t.stop()}}),t)})))()},methods:d(d({},Object(c.c)({setAlertModal:"set_alert_modal"})),{},{initiateParametersDataset:function(){var e,t=l(this.filters);try{for(t.s();!(e=t.n()).done;){var r=e.value.column;this.$set(this.parameters,r,""),this.autoComplete[r]||this.$set(this.autoComplete,r,[])}}catch(e){t.e(e)}finally{t.f()}this.$emit("updateParameters",d({},this.parameters))},getAutoCompleteData:function(){var e=this;return this.$axios.$get("api/cv").then((function(data){e.autocompleteStaticData=data})).catch((function(t){e.setAlertModal({msg:"Failed to get data in Screener View Sample"})}))},setAutoComplete:function(){var e=this;this.filters.forEach((function(filter){e.$set(e.autoComplete,filter.column,filter.is_checkbox&&e.autocompleteStaticData[e.activeDataset.dataset]?e.autocompleteStaticData[e.activeDataset.dataset][filter.column]:[])}))},toggleScreener:function(){this.isOpen=!this.isOpen},updateParameter:function(e,t){e&&t&&this.$set(this.parameters,e,t),this.$emit("updateParameters",this.parameters)}})},h=(r(439),r(35)),component=Object(h.a)(v,(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",[""!==e.description?r("h3",[e._v("\n    "+e._s(e.description)+"\n  ")]):e._e(),e._v(" "),e.filters&&e.filters.length>0?r("div",{staticClass:"classification_wrapper"},e._l(e.filters,(function(filter,t){return r("div",{key:t+1+"_test"},[r("h4",{key:t+1+"_gene_h3"},[e._v("\n        "+e._s(filter.label)+"\n        "),filter.note?r("span",{staticClass:"tag"},[e._v(e._s(filter.note))]):e._e(),e._v(" "),filter.examples?r("span",{staticClass:"example"},[e._v("\n          e.g.\n          "),e._l(filter.examples,(function(t,n){return[r("span",{key:n+"_example",staticClass:"sample_value",on:{click:function(r){return e.updateParameter(filter.column,t)}}},[e._v("\n              "+e._s(t)+"\n            ")]),e._v(" "),n<filter.examples.length-1?r("span",{key:n+"_separator"},[e._v(",")]):e._e()]}))],2):e._e()]),e._v(" "),filter.is_checkbox?r("select",{directives:[{name:"model",rawName:"v-model",value:e.parameters[filter.column],expression:"parameters[filter.column]"}],staticClass:"fixed_select",on:{change:[function(t){var r=Array.prototype.filter.call(t.target.options,(function(e){return e.selected})).map((function(e){return"_value"in e?e._value:e.value}));e.$set(e.parameters,filter.column,t.target.multiple?r:r[0])},function(t){return e.updateParameter(filter.column,t.target.value)}]}},[r("option",{attrs:{value:"",label:""}}),e._v(" "),e._l(e.autoComplete[filter.column],(function(option,e){return r("option",{key:e,attrs:{label:option},domProps:{value:option}})}))],2):r("input",{directives:[{name:"model",rawName:"v-model",value:e.parameters[filter.column],expression:"parameters[filter.column]"}],key:t+1+"_gene_tags",staticClass:"text_search_sample_types",attrs:{placeholder:filter.examples?filter.examples[0]:""},domProps:{value:e.parameters[filter.column]},on:{input:[function(t){t.target.composing||e.$set(e.parameters,filter.column,t.target.value)},function(t){return e.updateParameter(filter.column,e.parameters[filter.column])}]}})])})),0):e._e()])}),[],!1,null,"4d69ab13",null);t.default=component.exports}}]);